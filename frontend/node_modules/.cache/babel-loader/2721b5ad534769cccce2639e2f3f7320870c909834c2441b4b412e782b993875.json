{"ast":null,"code":"const API_BASE_URL = 'http://localhost:3001/api';\nconst api = {\n  // Auth endpoints\n  register: userData => fetch(`${API_BASE_URL}/auth/register`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  }),\n  login: credentials => fetch(`${API_BASE_URL}/auth/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  }),\n  // Portfolio endpoints\n  getPortfolio: token => fetch(`${API_BASE_URL}/portfolio`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }),\n  // Transaction endpoints\n  buyStock: (token, data) => fetch(`${API_BASE_URL}/transactions/buy`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify(data)\n  }),\n  sellStock: (token, data) => fetch(`${API_BASE_URL}/transactions/sell`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify(data)\n  }),\n  getTransactions: token => fetch(`${API_BASE_URL}/transactions`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }),\n  // Watchlist endpoints\n  getWatchlist: token => fetch(`${API_BASE_URL}/watchlist`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }),\n  addToWatchlist: (token, data) => fetch(`${API_BASE_URL}/watchlist/add`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify(data)\n  }),\n  // Goals endpoints\n  getGoals: token => fetch(`${API_BASE_URL}/goals`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }),\n  addGoal: (token, data) => fetch(`${API_BASE_URL}/goals/add`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    },\n    body: JSON.stringify(data)\n  }),\n  // Leaderboard endpoint\n  getLeaderboard: token => fetch(`${API_BASE_URL}/leaderboard`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  }),\n  // Search endpoint\n  searchStocks: (token, query) => fetch(`${API_BASE_URL}/search?query=${encodeURIComponent(query)}`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  })\n};\nexport default api;","map":{"version":3,"names":["API_BASE_URL","api","register","userData","fetch","method","headers","body","JSON","stringify","login","credentials","getPortfolio","token","buyStock","data","sellStock","getTransactions","getWatchlist","addToWatchlist","getGoals","addGoal","getLeaderboard","searchStocks","query","encodeURIComponent"],"sources":["c:/Users/SHIVAM/OneDrive/Desktop/VirtuTrade/frontend/src/utils/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:3001/api';\n\nconst api = {\n  // Auth endpoints\n  register: (userData) => \n    fetch(`${API_BASE_URL}/auth/register`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(userData)\n    }),\n\n  login: (credentials) =>\n    fetch(`${API_BASE_URL}/auth/login`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(credentials)\n    }),\n\n  // Portfolio endpoints\n  getPortfolio: (token) =>\n    fetch(`${API_BASE_URL}/portfolio`, {\n      headers: { 'Authorization': `Bearer ${token}` }\n    }),\n\n  // Transaction endpoints\n  buyStock: (token, data) =>\n    fetch(`${API_BASE_URL}/transactions/buy`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    }),\n\n  sellStock: (token, data) =>\n    fetch(`${API_BASE_URL}/transactions/sell`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    }),\n\n  getTransactions: (token) =>\n    fetch(`${API_BASE_URL}/transactions`, {\n      headers: { 'Authorization': `Bearer ${token}` }\n    }),\n\n  // Watchlist endpoints\n  getWatchlist: (token) =>\n    fetch(`${API_BASE_URL}/watchlist`, {\n      headers: { 'Authorization': `Bearer ${token}` }\n    }),\n\n  addToWatchlist: (token, data) =>\n    fetch(`${API_BASE_URL}/watchlist/add`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    }),\n\n  // Goals endpoints\n  getGoals: (token) =>\n    fetch(`${API_BASE_URL}/goals`, {\n      headers: { 'Authorization': `Bearer ${token}` }\n    }),\n\n  addGoal: (token, data) =>\n    fetch(`${API_BASE_URL}/goals/add`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(data)\n    }),\n\n  // Leaderboard endpoint\n  getLeaderboard: (token) =>\n    fetch(`${API_BASE_URL}/leaderboard`, {\n      headers: { 'Authorization': `Bearer ${token}` }\n    }),\n\n  // Search endpoint\n  searchStocks: (token, query) =>\n    fetch(`${API_BASE_URL}/search?query=${encodeURIComponent(query)}`, {\n      headers: { 'Authorization': `Bearer ${token}` }\n    })\n};\n\nexport default api;"],"mappings":"AAAA,MAAMA,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAG;EACV;EACAC,QAAQ,EAAGC,QAAQ,IACjBC,KAAK,CAAC,GAAGJ,YAAY,gBAAgB,EAAE;IACrCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;EAC/B,CAAC,CAAC;EAEJO,KAAK,EAAGC,WAAW,IACjBP,KAAK,CAAC,GAAGJ,YAAY,aAAa,EAAE;IAClCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACE,WAAW;EAClC,CAAC,CAAC;EAEJ;EACAC,YAAY,EAAGC,KAAK,IAClBT,KAAK,CAAC,GAAGJ,YAAY,YAAY,EAAE;IACjCM,OAAO,EAAE;MAAE,eAAe,EAAE,UAAUO,KAAK;IAAG;EAChD,CAAC,CAAC;EAEJ;EACAC,QAAQ,EAAEA,CAACD,KAAK,EAAEE,IAAI,KACpBX,KAAK,CAAC,GAAGJ,YAAY,mBAAmB,EAAE;IACxCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUO,KAAK;IAClC,CAAC;IACDN,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACM,IAAI;EAC3B,CAAC,CAAC;EAEJC,SAAS,EAAEA,CAACH,KAAK,EAAEE,IAAI,KACrBX,KAAK,CAAC,GAAGJ,YAAY,oBAAoB,EAAE;IACzCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUO,KAAK;IAClC,CAAC;IACDN,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACM,IAAI;EAC3B,CAAC,CAAC;EAEJE,eAAe,EAAGJ,KAAK,IACrBT,KAAK,CAAC,GAAGJ,YAAY,eAAe,EAAE;IACpCM,OAAO,EAAE;MAAE,eAAe,EAAE,UAAUO,KAAK;IAAG;EAChD,CAAC,CAAC;EAEJ;EACAK,YAAY,EAAGL,KAAK,IAClBT,KAAK,CAAC,GAAGJ,YAAY,YAAY,EAAE;IACjCM,OAAO,EAAE;MAAE,eAAe,EAAE,UAAUO,KAAK;IAAG;EAChD,CAAC,CAAC;EAEJM,cAAc,EAAEA,CAACN,KAAK,EAAEE,IAAI,KAC1BX,KAAK,CAAC,GAAGJ,YAAY,gBAAgB,EAAE;IACrCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUO,KAAK;IAClC,CAAC;IACDN,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACM,IAAI;EAC3B,CAAC,CAAC;EAEJ;EACAK,QAAQ,EAAGP,KAAK,IACdT,KAAK,CAAC,GAAGJ,YAAY,QAAQ,EAAE;IAC7BM,OAAO,EAAE;MAAE,eAAe,EAAE,UAAUO,KAAK;IAAG;EAChD,CAAC,CAAC;EAEJQ,OAAO,EAAEA,CAACR,KAAK,EAAEE,IAAI,KACnBX,KAAK,CAAC,GAAGJ,YAAY,YAAY,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAE,UAAUO,KAAK;IAClC,CAAC;IACDN,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACM,IAAI;EAC3B,CAAC,CAAC;EAEJ;EACAO,cAAc,EAAGT,KAAK,IACpBT,KAAK,CAAC,GAAGJ,YAAY,cAAc,EAAE;IACnCM,OAAO,EAAE;MAAE,eAAe,EAAE,UAAUO,KAAK;IAAG;EAChD,CAAC,CAAC;EAEJ;EACAU,YAAY,EAAEA,CAACV,KAAK,EAAEW,KAAK,KACzBpB,KAAK,CAAC,GAAGJ,YAAY,iBAAiByB,kBAAkB,CAACD,KAAK,CAAC,EAAE,EAAE;IACjElB,OAAO,EAAE;MAAE,eAAe,EAAE,UAAUO,KAAK;IAAG;EAChD,CAAC;AACL,CAAC;AAED,eAAeZ,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}